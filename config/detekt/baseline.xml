<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues></ManuallySuppressedIssues>
  <CurrentIssues>
    <ID>ComplexMethod:FeedsMgr.kt$FeedsMgr.Companion$@JvmStatic fun saveFeed(entries: Entries, currentFile: String = currentXml)</ID>
    <ID>ComplexMethod:Weather2.kt$Weather2.Companion$@JvmStatic @Throws(ModuleException::class) fun getWeather(query: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>LongMethod:FeedsMgr.kt$FeedsMgr.Companion$@JvmStatic fun saveFeed(entries: Entries, currentFile: String = currentXml)</ID>
    <ID>LongMethod:Mobibot.kt$Mobibot.Companion$@JvmStatic @Throws(Exception::class) fun main(args: Array&lt;String&gt;)</ID>
    <ID>LongMethod:StockQuote.kt$StockQuote.Companion$@JvmStatic @Throws(ModuleException::class) fun getQuote(symbol: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>LongMethod:Weather2.kt$Weather2.Companion$@JvmStatic @Throws(ModuleException::class) fun getWeather(query: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>LongParameterList:Comment.kt$Comment$( channel: String, cmd: String, entry: EntryLink, entryIndex: Int, commentIndex: Int, event: GenericMessageEvent )</ID>
    <ID>LongParameterList:EntryLink.kt$EntryLink$( // Link's comments val comments: MutableList&lt;EntryComment&gt; = mutableListOf(), // Tags/categories val tags: MutableList&lt;SyndCategory&gt; = mutableListOf(), // Channel var channel: String, // Creation date var date: Date = Calendar.getInstance().time, // Link's URL var link: String, // Author's login var login: String = "", // Author's nickname var nick: String, // Link's title var title: String )</ID>
    <ID>LongParameterList:Twitter.kt$Twitter.Companion$( consumerKey: String?, consumerSecret: String?, token: String?, tokenSecret: String?, handle: String?, message: String, isDm: Boolean )</ID>
    <ID>MagicNumber:Comment.kt$Comment$3</ID>
    <ID>MagicNumber:CryptoPrices.kt$CryptoPrices$10</ID>
    <ID>MagicNumber:CurrencyConverter.kt$CurrencyConverter$11</ID>
    <ID>MagicNumber:CurrencyConverter.kt$CurrencyConverter.Companion$3</ID>
    <ID>MagicNumber:CurrencyConverter.kt$CurrencyConverter.Companion$4</ID>
    <ID>MagicNumber:Cycle.kt$Cycle$10</ID>
    <ID>MagicNumber:Cycle.kt$Cycle$1000L</ID>
    <ID>MagicNumber:Ignore.kt$Ignore$8</ID>
    <ID>MagicNumber:Info.kt$Info.Companion$30</ID>
    <ID>MagicNumber:Info.kt$Info.Companion$365</ID>
    <ID>MagicNumber:Info.kt$Info.Companion$7</ID>
    <ID>MagicNumber:Mobibot.kt$Mobibot$8</ID>
    <ID>MagicNumber:Modules.kt$Modules$7</ID>
    <ID>MagicNumber:StockQuote.kt$StockQuote.Companion$10</ID>
    <ID>MagicNumber:Tell.kt$Tell$50</ID>
    <ID>MagicNumber:Tell.kt$Tell$7</ID>
    <ID>MagicNumber:Twitter.kt$Twitter$1000L</ID>
    <ID>MagicNumber:Twitter.kt$Twitter$60L</ID>
    <ID>MagicNumber:TwitterOAuth.kt$TwitterOAuth$401</ID>
    <ID>MagicNumber:Users.kt$Users$8</ID>
    <ID>MagicNumber:Weather2.kt$Weather2.Companion$1.60934</ID>
    <ID>MagicNumber:Weather2.kt$Weather2.Companion$32</ID>
    <ID>MagicNumber:Weather2.kt$Weather2.Companion$404</ID>
    <ID>MagicNumber:Weather2.kt$Weather2.Companion$5</ID>
    <ID>MagicNumber:Weather2.kt$Weather2.Companion$9</ID>
    <ID>MagicNumber:WorldTime.kt$WorldTime$14</ID>
    <ID>MagicNumber:WorldTime.kt$WorldTime$4</ID>
    <ID>MagicNumber:WorldTime.kt$WorldTime.Companion$3600</ID>
    <ID>MagicNumber:WorldTime.kt$WorldTime.Companion$60</ID>
    <ID>MagicNumber:WorldTime.kt$WorldTime.Companion$86.4</ID>
    <ID>NestedBlockDepth:Addons.kt$Addons$fun add(command: AbstractCommand)</ID>
    <ID>NestedBlockDepth:Addons.kt$Addons$fun add(module: AbstractModule)</ID>
    <ID>NestedBlockDepth:Comment.kt$Comment$override fun commandResponse(channel: String, args: String, event: GenericMessageEvent)</ID>
    <ID>NestedBlockDepth:CurrencyConverter.kt$CurrencyConverter.Companion$@JvmStatic fun convertCurrency(query: String): Message</ID>
    <ID>NestedBlockDepth:EntryLink.kt$EntryLink$private fun setTags(tags: List&lt;String?&gt;)</ID>
    <ID>NestedBlockDepth:FeedsMgr.kt$FeedsMgr.Companion$@JvmStatic @Throws(IOException::class, FeedException::class) fun loadFeed(entries: Entries, currentFile: String = currentXml): String</ID>
    <ID>NestedBlockDepth:FeedsMgr.kt$FeedsMgr.Companion$@JvmStatic fun saveFeed(entries: Entries, currentFile: String = currentXml)</ID>
    <ID>NestedBlockDepth:GoogleSearch.kt$GoogleSearch.Companion$@JvmStatic @Throws(ModuleException::class) fun searchGoogle(query: String, apiKey: String?, cseKey: String?): List&lt;Message&gt;</ID>
    <ID>NestedBlockDepth:LinksMgr.kt$LinksMgr$override fun commandResponse(channel: String, args: String, event: GenericMessageEvent)</ID>
    <ID>NestedBlockDepth:Lookup.kt$Lookup$override fun commandResponse(channel: String, cmd: String, args: String, event: GenericMessageEvent)</ID>
    <ID>NestedBlockDepth:Posting.kt$Posting$override fun commandResponse(channel: String, args: String, event: GenericMessageEvent)</ID>
    <ID>NestedBlockDepth:Seen.kt$Seen$fun add(nick: String)</ID>
    <ID>NestedBlockDepth:Seen.kt$Seen$override fun commandResponse(channel: String, args: String, event: GenericMessageEvent)</ID>
    <ID>NestedBlockDepth:StockQuote.kt$StockQuote.Companion$@JvmStatic @Throws(ModuleException::class) fun getQuote(symbol: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>NestedBlockDepth:Tell.kt$Tell$fun send(event: GenericUserEvent)</ID>
    <ID>NestedBlockDepth:TwitterOAuth.kt$TwitterOAuth$@JvmStatic @Throws(TwitterException::class, IOException::class) fun main(args: Array&lt;String&gt;)</ID>
    <ID>NestedBlockDepth:Utils.kt$Utils$@JvmStatic fun loadData(file: String, default: Any, logger: Logger, description: String): Any</ID>
    <ID>NestedBlockDepth:Utils.kt$Utils$@JvmStatic fun saveData(file: String, data: Any, logger: Logger, description: String)</ID>
    <ID>NestedBlockDepth:Weather2.kt$Weather2$override fun run(channel: String, cmd: String, args: String, event: GenericMessageEvent)</ID>
    <ID>NestedBlockDepth:Weather2.kt$Weather2.Companion$@JvmStatic @Throws(ModuleException::class) fun getWeather(query: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>ReturnCount:Addons.kt$Addons$fun exec(channel: String, cmd: String, args: String, event: GenericMessageEvent): Boolean</ID>
    <ID>ReturnCount:Addons.kt$Addons$fun help(channel: String, topic: String, event: GenericMessageEvent): Boolean</ID>
    <ID>ReturnCount:ExceptionSanitizer.kt$ExceptionSanitizer$fun ModuleException.sanitize(vararg sanitize: String): ModuleException</ID>
    <ID>SwallowedException:GoogleSearchTest.kt$GoogleSearchTest$e: ModuleException</ID>
    <ID>SwallowedException:StockQuoteTest.kt$StockQuoteTest$e: ModuleException</ID>
    <ID>SwallowedException:WolframAlpha.kt$WolframAlpha.Companion$ioe: IOException</ID>
    <ID>SwallowedException:WolframAlphaTest.kt$WolframAlphaTest$e: ModuleException</ID>
    <ID>ThrowsCount:GoogleSearch.kt$GoogleSearch.Companion$@JvmStatic @Throws(ModuleException::class) fun searchGoogle(query: String, apiKey: String?, cseKey: String?): List&lt;Message&gt;</ID>
    <ID>ThrowsCount:StockQuote.kt$StockQuote.Companion$@JvmStatic @Throws(ModuleException::class) fun getQuote(symbol: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>ThrowsCount:StockQuote.kt$StockQuote.Companion$@Throws(ModuleException::class) private fun getJsonResponse(response: String, debugMessage: String): JSONObject</ID>
    <ID>ThrowsCount:Weather2.kt$Weather2.Companion$@JvmStatic @Throws(ModuleException::class) fun getWeather(query: String, apiKey: String?): List&lt;Message&gt;</ID>
    <ID>TooGenericExceptionCaught:StockQuote.kt$StockQuote.Companion$e: NullPointerException</ID>
    <ID>TooGenericExceptionCaught:Weather2.kt$Weather2.Companion$e: NullPointerException</ID>
    <ID>TooManyFunctions:Tell.kt$Tell : AbstractCommand</ID>
  </CurrentIssues>
</SmellBaseline>
