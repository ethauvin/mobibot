name: bld-ci

on: [ push, pull_request, workflow_dispatch ]

env:
  CHATGPT_API_KEY: ${{ secrets.CHATGPT_API_KEY }}
  CI_NAME: "GitHub CI"
  COVERAGE_JDK: "24"
  EXCHANGERATE_API_KEY: ${{ secrets.EXCHANGERATE_API_KEY }}
  FINNHUB_API_KEY: ${{ secrets.FINNHUB_API_KEY }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  GOOGLE_CSE_CX: ${{ secrets.GOOGLE_CSE_CX }}
  KOTLIN_VERSION: 2.2.0
  MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
  MASTODON_HANDLE: ${{ secrets.MASTODON_HANDLE }}
  MASTODON_INSTANCE: ${{ secrets.MASTODON_INSTANCE }}
  OWM_API_KEY: ${{ secrets.OWM_API_KEY }}
  PINBOARD_API_TOKEN: ${{ secrets.PINBOARD_API_TOKEN }}

jobs:
  build-bld-project:
    strategy:
      matrix:
        java-version: [ 21, 24 ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java-version }} with Kotlin ${{ matrix.kotlin-version }}
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ matrix.java-version }}

      - name: Setup Kotlin ${{ env.KOTLIN_VERSION }}
        uses: fwilhe2/setup-kotlin@main
        with:
          version: ${{ env.KOTLIN_VERSION }}

      - name: Download dependencies
        run: ./bld download

      - name: Compile source
        run: ./bld compile

      - name: Run tests
        continue-on-error: true
        run: ./bld jacoco

      - name: Run reporter
        if: ${{ failure() }}
        run: ./bld reporter -all

      - name: Remove pom.xml
        if: success() && matrix.java-version == env.COVERAGE_JDK && matrix.os == 'ubuntu-latest'
        run: rm -rf pom.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        if: success() && matrix.java-version == env.COVERAGE_JDK && matrix.os == 'ubuntu-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
